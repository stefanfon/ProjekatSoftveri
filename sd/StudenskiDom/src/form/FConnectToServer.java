/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import sesion.Sesion;

/**
 *
 * @author Stefan
 */
public class FConnectToServer extends javax.swing.JFrame {

    /**
     * Creates new form FConnectToServer
     */
    public FConnectToServer() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtIP = new javax.swing.JTextField();
        jtxtPort = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jbtnConnect = new javax.swing.JButton();
        jbtnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Server IP :");

        jLabel2.setText("Server Port:");

        jbtnConnect.setText("Connect");
        jbtnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConnectActionPerformed(evt);
            }
        });

        jbtnSacuvaj.setText("Sacuvaj");
        jbtnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnSacuvaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnConnect))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnConnect)
                    .addComponent(jbtnSacuvaj))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConnectActionPerformed
        try {
            String ip = jtxtIP.getText().trim();
            int port = Integer.parseInt(jtxtPort.getText().trim());
            try {
                Socket socket = new Socket(ip, port);
                Sesion.getInstance().setSocket(socket);
                
                
                PrintWriter out=new PrintWriter(new BufferedWriter(new FileWriter("server.config")));
                out.print("ip="+ip+"\n"+"port="+port);
                
                out.close();
                
                dispose();
                new Logovanje().setVisible(true);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Neuspensa konekcija sa serverom");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Neuspesna konekcija");
        }
    }//GEN-LAST:event_jbtnConnectActionPerformed

    private void jbtnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajActionPerformed

        // TODO add your handling code here:
         String ip = jtxtIP.getText().trim();
            int port = Integer.parseInt(jtxtPort.getText().trim());
         PrintWriter out;
        try {
            out = new PrintWriter(new BufferedWriter(new FileWriter("server.config")));
            out.print("ip="+ip+"\n"+"port="+port);
                
                out.close();
                
                dispose();
        } catch (IOException ex) {
            Logger.getLogger(FConnectToServer.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_jbtnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */

    public JButton getJbtnConnect() {
        return jbtnConnect;
    }

    /**
     * @param args the command line arguments
     */
    public void setJbtnConnect(JButton jbtnConnect) {
        this.jbtnConnect = jbtnConnect;
    }

    public JButton getJbtnSacuvaj() {
        return jbtnSacuvaj;
    }

    public void setJbtnSacuvaj(JButton jbtnSacuvaj) {
        this.jbtnSacuvaj = jbtnSacuvaj;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbtnConnect;
    private javax.swing.JButton jbtnSacuvaj;
    private javax.swing.JTextField jtxtIP;
    private javax.swing.JTextField jtxtPort;
    // End of variables declaration//GEN-END:variables
}
